#!/usr/bin/env ruby

require 'fileutils'

## Deploys a copy of this instance on another destination. Uses symlinks.

$:.unshift(File.expand_path(File.dirname(__FILE__) + '/../'))
Dir.chdir(File.expand_path(File.dirname(__FILE__) + '/../'))

@realm = ARGV[0] || ''
@destination = ARGV[1] || ''

## Checking parameters
if (@realm == '') || (@destination == '')
	STDOUT << "Usage ./deploy realm destination\n\n"
	STDOUT << "The realm should be set correctly, because it's used in the password of users and the database.\n"
	STDOUT << "The destination should not exist.\n"
	exit(1)
end

if @realm.include?(' ')
	STDOUT << "Spaces in the realm are not allowed.\n"
	exit(2)
end

if File.exists?(@destination)
	STDOUT << "The destination already exists. Ain't gonna deploy on that spot.\n"
	exit(3)
end


## Usefull methods

def create_folder(folder = '', permissions = 0755)
	STDOUT << "Creating folder #{@destination}#{folder}\n"
	begin
		Dir.mkdir(@destination + folder, permissions)
	rescue Exception => e
		STDOUT << "  Error while creating folder: #{e.message}\n"
	end
end

def create_symlink(src)
	STDOUT << "Creating symbolic link #{@destination}#{src}\n"
	begin
		File.symlink(File.absolute_path(src), @destination + src) rescue ''
	rescue Exception => e
		STDOUT << "  Error while creating folder: #{e.message}\n"
	end
end

def copy_file(file)
	STDOUT << "Copying file to #{@destination}#{file}\n"
	begin
		FileUtils.copy_file(file, @destination + file) rescue ''
	rescue Exception => e
		STDOUT << "  Error while creating folder: #{e.message}\n"
	end

end

## Creating folders and symbolic links

@destination += '/' unless @destination.end_with?('/')

begin
	Dir.mkdir(@destination)
rescue Exception => e
	STDOUT << "The destination could not be created due to an error (#{e.message}. Aborted the deploy.\n"
	exit(4)
end


create_symlink('app.rb')
create_symlink('config.ru')
copy_file('project_settings.yaml')

create_folder('api')
create_symlink('api/lib')
create_folder('api/resources')
create_symlink('api/resources/files')
create_symlink('api/resources/groups')
create_symlink('api/resources/locale')
create_symlink('api/resources/news')
create_symlink('api/resources/pages')
create_symlink('api/resources/settings')
create_symlink('api/resources/users')

create_folder('logs', 0666)

create_symlink('middleware')

create_folder('tmp', 0666)

create_folder('tools')
create_symlink('tools/build')
create_symlink('tools/clean')
create_symlink('tools/mojura_tester')
create_symlink('tools/resource_disable')
create_symlink('tools/resource_enable')
create_symlink('tools/view_disable')
create_symlink('tools/view_enable')

create_folder('uploads', 0666)

create_folder('webapp')
create_symlink('webapp/mojura')
create_symlink('webapp/ext')
create_folder('webapp/views')
create_symlink('webapp/views/body')
create_symlink('webapp/views/files')
create_symlink('webapp/views/images')
create_symlink('webapp/views/login')
create_symlink('webapp/views/navbar')
create_symlink('webapp/views/news')
create_symlink('webapp/views/profile')
create_symlink('webapp/views/sitemap')
create_symlink('webapp/views/users')
create_symlink('webapp/views/video')
copy_file('webapp/views/favicon.ico')


## Update the project settings
filename = @destination + "project_settings.yaml"
data = File.read(filename)
data.gsub!(/^(\s*database\s*:\s*)(\w*)(\s*)$/, "\\1#{@realm}\\3")
data.gsub!(/^(\s*realm\s*:\s*)(\w*)(\s*)$/, "\\1#{@realm}\\3")
File.write(filename, data)






