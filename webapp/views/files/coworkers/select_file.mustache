<style type="text/css">
	#file-popup .modal-body li {
		cursor: pointer;
		width: 150px;
		height: 20px;
		padding-top: 148px;
		display: inline-block;
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;
		text-align: center;
		margin: 0 5px 10px 0;
		background-size: 128px;
		background: no-repeat center 10px;
		position: relative;
	}

	#file-popup .modal-body li i[class^="icon-"],
	#file-popup .modal-body li i[class*=" icon-"] {
		display: block;
		position: absolute;
		top: 10px;
		color: silver;
		font-size: 40px;
		width: 150px;
		line-height: 128px;
		text-align: center;
		vertical-align: middle;
	}

	#file-popup .modal-body ul .selected {
		background-color: #e6e6e6;
		border-color: #08C;
	}

	#file-popup .modal-footer .file-input {
		width: 150px;
		border: 1px solid red;
		position: absolute;
		opacity: 0;
		filter: alpha(opacity=0); /* For IE8 and earlier */
	}

	#file-popup .modal-footer .btn-upload {
		width: 150px;
	}
</style>

<template id="file-popup-template">
	<div class="file-popup-modal modal modal-extra-large fade hide">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal">&times;</button>
			<h3>{{locale_str_files_action_select}}</h3>
		</div>
		<div class="modal-body">
			<div class="loading"></div>
		</div>
		<div class="modal-footer">
			<form enctype="multipart/form-data" action="__api__/files/" method="post" class="file-upload-form pull-left">
				<input type="hidden" name="_method" value="put"/>
				<input type="hidden" name="folderid" value="{{folderid}}"/>
				<input type="file" name="file" class="file-input" onchange="if (this.value !== '') SelectFile.uploadFile();" />
			</form>

			<button class="btn pull-left btn-upload btn-warning" data-loading-text="{{locale_str_files_action_quick_upload}}...">
				<i class="icon-upload"></i>
				{{locale_str_files_action_quick_upload}}
			</button>
			<button class="btn" data-dismiss="modal">{{locale_str_system_cancel}}</button>
			<button class="btn btn-primary disabled">{{locale_str_system_confirm}}</button>
		</div>
	</div>
</template>

<template id="file-popup-content-template" type="text/plain">
	<ul class="unstyled">
		{{=<% %>=}}
		<!-- The following template codes are processed in second phase //-->
		{{^is_base_folder}}
		<li class='thumbnail' onclick="SelectFile.setCurrentFolderId('{{parentid}}')">
			<i class='icon-folder-open'></i><%locale_str_files_parent_folder%>
		</li>
		{{/is_base_folder}}

		{{#subfolders}}
		<li class='thumbnail' onclick="SelectFile.setCurrentFolderId('{{id}}')">
			<i class='icon-folder-close'></i>{{title}}
		</li>
		{{/subfolders}}

		{{#files}}
			{{#is_image}}
			<li class='thumbnail thumbnail_{{id}}' onclick="SelectFile.selectFile('{{id}}', this)" style="background-image: url('__api__/files/{{id}}/download?type=avatar')">
				{{title}}
			</li>
			{{/is_image}}
			{{^is_image}}
			<li class='thumbnail thumbnail_{{id}}' onclick="SelectFile.selectFile('{{id}}', this);">
				<i class='icon-file'></i>{{title}}
			</li>
		{{/is_image}}
		{{/files}}
		<%={{ }}=%>
	</ul>
</template>

<script type='text/javascript'>
	//noinspection LocalVariableNamingConventionJS
	var SelectFile = (function () {

		this.currentFolderId = "root";
		this.selectedFiles = [];
		this.template = $("#file-popup-content-template").html();
		this.multiSelect = true;
		this.parentModalId = "";

		function show(options) {
			if (!options) { //noinspection AssignmentToFunctionParameterJS
				options = {}
			}
			multiSelect = (options.multi === true);

			if (options.parentModalId === undefined)
				options.parentModalId = "";
			parentModalId = options.parentModalId;

			selectedFiles = [];
			$("body").append($("#file-popup-template").html());

			jModal = $("body > .file-popup-modal");
			jModal.attr("id", "file-popup")
				.one("shown", function() {
					$("#file-popup .btn-primary").click(function() {
						if (!$("#file-popup .btn-primary").hasClass("disabled")) {
							if (options.confirmed)
								options.confirmed(selectedFiles);
							$("#file-popup").modal("hide");
						}
					});
					refresh();
				})
				.one("hidden", function () {
						if (parentModalId != "") {
							$("#" + parentModalId).one("shown",function () {
								$("#" + parentModalId + ", .modal-backdrop").addClass("fade");
							}).modal("show");
						}
						jModal.remove();
				});

			if (parentModalId == "") {
				jModal.addClass("fade").modal("show");
			}
			else {
				$("#" + parentModalId).removeClass("fade").one("hidden",function () {
					jModal.removeClass("fade").modal("show");
				}).modal("hide");
			}
		}

		function refresh() {
			$("#filePopup .modal-body").html("<div class='loading'></div>");
			id = currentFolderId;
			selectedFiles = [];
			if ((id == "") || (id === undefined)) id = "root";
			url = "__api__/files/folder/" + id;
			$.getJSON(url, function (data) {
				data.may_maintain = (data.rights.allowed.update);
				data.is_base_folder = (id == "root");
				data.has_subfolders = (data.subfolders.length > 0);
				data.has_files = (data.files.length > 0);
				for (i = 0; i < data.files.length; i++)
					data.files[i].is_image = (data.files[i].mime_type !== undefined) && (data.files[i].mime_type.slice(0, 5) == "image");

				html = Mustache.to_html(template, data);
				$("#file-popup .modal-body").html(html);
			});
		}

		function setCurrentFolderId(id) {
			currentFolderId = id;
			refresh();
		}

		function selectFile(id, elem) {
			jElem = $(elem);
			if (jElem.hasClass("selected")) {
				jElem.removeClass("selected");
				selectedFiles.splice(selectedFiles.indexOf(id), 1);
				if (selectedFiles.length === 0)
					$("#file-popup .btn-primary").addClass("disabled");
			} else {
				if (!multiSelect) {
					$("#file-popup .modal-body ul .selected").removeClass("selected");
					selectedFiles = [];
				}
				$("#file-popup .btn-primary").removeClass("disabled");
				selectedFiles.push(id);
				jElem.addClass("selected");
			}
		}

		function uploadFile() {
			$("#file-popup .btn-upload").button("loading");
			$("#file-popup input[name=folderid]").val(currentFolderId);
			$("#file-popup .file-upload-form").ajaxForm({
				success: function () {
					$("#file-popup .btn-upload").button("reset");
					refresh();
				}
			}).submit();
		}

		function getCachedFilename(fileId) {
			return $.trim($("#file-popup .modal-body .thumbnail_" + fileId).html());
		}

		return {show: show,
			setCurrentFolderId: setCurrentFolderId,
			selectFile: selectFile,
			uploadFile: uploadFile,
			getCachedFilename: getCachedFilename
		};

	})(jQuery);

</script>
